package:
    name: dvidutils
  {% if GIT_DESCRIBE_NUMBER|int == 0 %}
    version: {{GIT_DESCRIBE_TAG}}
  {% else %}
    # If we're using a non-tagged revision, append '.postN' to the version
    version: {{GIT_DESCRIBE_TAG}}.post{{GIT_DESCRIBE_NUMBER}}
  {% endif %}

source:
  path: ../

build:
  number: 0

  # By default, gcc-5+ can't be used if we intend to link with
  # packages that were produced with lower versions of gcc.
  # We must explicitly tell gcc to use the old libstdc++ ABI.
  # (for instance, our draco package).
  script_env:                     # [linux]
    - DO_NOT_BUILD_WITH_CXX11_ABI # [linux]

requirements:
  build:
    - gxx_linux-64 # [linux]
    - cmake
    - python >=3.6,{{PY_VER}}*
    - numpy {{NPY_VER}}* # To avoid runtime errors about the numpy ABI
    - xtensor >=0.15
    - xtensor-python >=0.17 # uint64 bindings were broken before 0.15
    - pybind11 >=2.2.1 # Required for call_guard
    - draco 1.0.1
    - boost
  run:
    - python {{PY_VER}}*
    - numpy {{NPY_VER}}*
    - draco 1.0.1

test:
  requires:
   - pytest
   - pandas

  imports:
    - dvidutils

  source_files:
    - tests
    
  commands:
    - pytest tests

about:
  home: http://github.com/janelia-flyem/dvidutils
  license: BSD (3-clause)
  summary: A collection of utility functions for dealing with dvid data
